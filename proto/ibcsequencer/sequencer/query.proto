syntax = "proto3";

package ibc_sequencer.sequencer;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "ibcsequencer/sequencer/params.proto";
import "ibcsequencer/sequencer/tx_pool.proto";

option go_package = "ibc_sequencer/x/sequencer/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ibc_sequencer/sequencer/params";
  
  }
  
  // Queries a list of TxPool items.
  rpc TxPool    (QueryGetTxPoolRequest) returns (QueryGetTxPoolResponse) {
    option (google.api.http).get = "/ibc_sequencer/sequencer/tx_pool/{index}";
  
  }
  rpc TxPoolAll (QueryAllTxPoolRequest) returns (QueryAllTxPoolResponse) {
    option (google.api.http).get = "/ibc_sequencer/sequencer/tx_pool";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetTxPoolRequest {
  string index = 1;
}

message QueryGetTxPoolResponse {
  TxPool txPool = 1 [(gogoproto.nullable) = false];
}

message QueryAllTxPoolRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTxPoolResponse {
  repeated TxPool                                 txPool     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

