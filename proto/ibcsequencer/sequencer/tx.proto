syntax = "proto3";

package ibc_sequencer.sequencer;

import "ibcsequencer/sequencer/tx_pool.proto";
import "ibcsequencer/sequencer/block.proto";

option go_package = "ibc_sequencer/x/sequencer/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateTxPool   (MsgCreateTxPool  ) returns (MsgCreateTxPoolResponse  );
  rpc UpdateTxPool   (MsgUpdateTxPool  ) returns (MsgUpdateTxPoolResponse  );
  rpc DeleteTxPool   (MsgDeleteTxPool  ) returns (MsgDeleteTxPoolResponse  );
  rpc SendCommitment (MsgSendCommitment) returns (MsgSendCommitmentResponse);
  rpc SendPayload    (MsgSendPayload   ) returns (MsgSendPayloadResponse   );
  rpc SendTlp        (MsgSendTlp       ) returns (MsgSendTlpResponse       );
  rpc CloseRound     (MsgCloseRound    ) returns (MsgCloseRoundResponse    );
  rpc MakeBlock      (MsgMakeBlock     ) returns (MsgMakeBlockResponse     );
  rpc CreateBlock    (MsgCreateBlock   ) returns (MsgCreateBlockResponse   );
  rpc UpdateBlock    (MsgUpdateBlock   ) returns (MsgUpdateBlockResponse   );
  rpc DeleteBlock    (MsgDeleteBlock   ) returns (MsgDeleteBlockResponse   );
}
message MsgCreateTxPool {
  string creator = 1;
  string index   = 2;
  string hash    = 3;
  string payload = 4;
  uint64 round   = 5;
}

message MsgCreateTxPoolResponse {}

message MsgUpdateTxPool {
  string creator = 1;
  string index   = 2;
  string hash    = 3;
  string payload = 4;
  uint64 round   = 5;
}

message MsgUpdateTxPoolResponse {}

message MsgDeleteTxPool {
  string creator = 1;
  string index   = 2;
}

message MsgDeleteTxPoolResponse {}

message MsgSendCommitment {
  uint64 round            = 5;
  string hash             = 6;
  string creator          = 1;
  string port             = 2;
  string channelID        = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendCommitmentResponse {}

message MsgSendPayload {
           uint64 round            = 5;
           string hash             = 6;
           string creator          = 1;
           string port             = 2;
           string channelID        = 3;
           uint64 timeoutTimestamp = 4;
}

message MsgSendPayloadResponse {}

message MsgSendTlp {
  string hash             = 5;
  string tlp              = 6;
  string creator          = 1;
  string port             = 2;
  string channelID        = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendTlpResponse {}

message MsgCloseRound {
  uint64 round            = 5;
  string creator          = 1;
  string port             = 2;
  string channelID        = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgCloseRoundResponse {}

message MsgMakeBlock {
  string creator = 1;
  uint64 round   = 2;
}

message MsgMakeBlockResponse {}

message MsgCreateBlock {
           string creator = 1;
  repeated string txs     = 2;
}

message MsgCreateBlockResponse {
  uint64 id = 1;
}

message MsgUpdateBlock {
           string creator = 1;
           uint64 id      = 2;
  repeated string txs     = 3;
}

message MsgUpdateBlockResponse {}

message MsgDeleteBlock {
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeleteBlockResponse {}

